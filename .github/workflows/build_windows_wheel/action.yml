# We create a composite action to be re-used both for testing and for releasing
name: build_wheel
description: "Build a lance wheel"
inputs:
  python-minor-version:
    description: "8, 9, 10, 11"
    required: true
  args:
    description: "--release"
    required: false
    default: ""
  vcpkg_token:
    description: "Token to use to publish / lookup vcpkg packages"
    required: true
runs:
  using: "composite"
  steps:
    - uses: ./.github/workflows/install_windows_dependencies
      with:
        vcpkg_token: ${{ inputs.vcpkg_token }}
        update_vcpkg: true  
    - name: Build wheel
      env:
        VCPKG_ROOT: C:\vcpkg
      uses: PyO3/maturin-action@v1
      with:
        command: build
        args: ${{ inputs.args }}
        working-directory: python
    - name: Add DLLs to wheel
      working-directory: python
      run: |
        $env:VCPKG_ROOT = $env:VCPKG_INSTALLATION_ROOT
        $env:PATH = $env:VCPKG_INSTALLATION_ROOT + '\installed\x64-windows\bin;' + $env:PATH
        $env:PATH = $env:VCPKG_INSTALLATION_ROOT + '\installed\x64-windows-static-md\bin;' + $env:PATH
        $env:PATH = $env:VCPKG_INSTALLATION_ROOT + '\installed\x64-windows\tools\protobuf;' + $env:PATH
        pip install delvewheel
        delvewheel repair --wheel-dir target\wheels $(ls target/wheels/*.whl)
      shell: powershell
    - uses: actions/upload-artifact@v3
      with:
        name: windows-wheels
        path: python\target\wheels
