name: Build and run Rust tests
on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - rust/**
      - protos/**
      - .github/workflows/rust.yml
jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./rust
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y protobuf-compiler libssl-dev
      - name: Run cargo fmt
        run: cargo fmt --check
      - name: Run tests
        run: |
          cargo build --all-features
          cargo test
  mac-build:
    runs-on: macos-12
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./rust
    steps:
      - uses: actions/checkout@v3
      - name: CPU features
        run: sysctl -a | grep cpu
      - name: Setup cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install dependencies
        run: brew install protobuf
      - name: Run tests
        run: |
          cargo build --all-features
          cargo test
  windows-build:
    runs-on: windows-latest
    timeout-minutes: 90
    defaults:
      run:
        working-directory: rust
    env:
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
    steps:
      - uses: actions/checkout@v3
      - name: Setup cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**\Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - uses: ./.github/workflows/install_windows_dependencies
        with:
          vcpkg_token: ${{ secrets.VCPKG_GITHUB_PACKAGES }}
          update_vcpkg: true
      - name: Run tests
        run: |
          $env:VCPKG_ROOT = $env:VCPKG_INSTALLATION_ROOT
          $env:PATH = $env:VCPKG_INSTALLATION_ROOT + '\installed\x64-windows\bin;' + $env:PATH
          $env:PATH = $env:VCPKG_INSTALLATION_ROOT + '\installed\x64-windows-static-md\bin;' + $env:PATH
          $env:PATH = $env:VCPKG_INSTALLATION_ROOT + '\installed\x64-windows\tools\protobuf;' + $env:PATH
          cargo build --all-features
          cargo test
