name: Create release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      release_channel:
        description: 'Release channel'
        required: true
        default: 'preview'
        type: choice
        options:
          - preview
          - stable
      dry_run:
        description: 'Dry run (simulate the release without pushing)'
        required: true
        default: false
        type: boolean
      draft_release:
        description: 'Create a draft release on GitHub'
        required: true
        default: false
        type: boolean

jobs:
  validate-and-release:
    runs-on: ubuntu-latest
    steps:
    - name: Output Inputs
      run: echo "${{ toJSON(github.event.inputs) }}"
    
    - name: Check out main
      uses: actions/checkout@v4
      with:
        ref: main
        token: ${{ secrets.LANCE_RELEASE_TOKEN }}
        fetch-depth: 0
        lfs: true
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        pip install bump-my-version packaging PyGithub
    
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Configure git identity
      run: |
        git config user.name 'Lance Release Bot'
        git config user.email 'lance-dev@lancedb.com'

    - name: Bump version using bump_version.sh
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
      run: |
        bash ci/bump_version.sh ${{ inputs.release_channel }} ${{ inputs.release_type }} v

    - name: Get new tag
      id: new_tag
      run: |
        NEW_TAG=$(git describe --tags --exact-match HEAD)
        echo "tag=$NEW_TAG" >> $GITHUB_OUTPUT
        echo "New tag: $NEW_TAG"
    
    - name: Push changes (if not dry run)
      if: ${{ !inputs.dry_run }}
      run: |
        # Push the commit to main
        git push origin main
        # Push the tag
        git push origin "${{ steps.new_tag.outputs.tag }}"

    - name: Create GitHub Release (if not dry run)
      if: ${{ !inputs.dry_run }}
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.new_tag.outputs.tag }}
        name: ${{ steps.new_tag.outputs.tag }}
        draft: ${{ inputs.draft_release }}
        prerelease: ${{ inputs.release_channel == 'preview' }}
        generate_release_notes: true
        token: ${{ secrets.LANCE_RELEASE_TOKEN }}

    - name: Summary
      run: |
        echo "## Release Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Release Type:** ${{ inputs.release_type }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Release Channel:** ${{ inputs.release_channel }}" >> $GITHUB_STEP_SUMMARY
        echo "- **New Tag:** ${{ steps.new_tag.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Draft Release:** ${{ inputs.draft_release }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Dry Run:** ${{ inputs.dry_run }}" >> $GITHUB_STEP_SUMMARY

        if [ "${{ inputs.dry_run }}" == "true" ]; then
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ This was a dry run. No changes were pushed." >> $GITHUB_STEP_SUMMARY
        else
          if [ "${{ inputs.release_channel }}" == "stable" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ Stable release ${{ steps.new_tag.outputs.tag }} complete!" >> $GITHUB_STEP_SUMMARY
          else
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ Preview release ${{ steps.new_tag.outputs.tag }} complete!" >> $GITHUB_STEP_SUMMARY
          fi
        fi
