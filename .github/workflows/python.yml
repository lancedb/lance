name: Python

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - python/**
      - rust/**
      - protos/**
      - .github/workflows/python.yml
      - .github/workflows/build_linux_wheel/**
      - .github/workflows/build_mac_wheel/**
      - .github/workflows/run_tests/**

env:
  # This env var is used by Swatinem/rust-cache@v2 for the cache
  # key, so we set it to make sure it is always consistent.
  CARGO_TERM_COLOR: always
  # Disable full debug symbol generation to speed up CI build and keep memory down
  # "1" means line tables only, which is useful for panic tracebacks.
  RUSTFLAGS: "-C debuginfo=1"
  RUST_BACKTRACE: "1"

jobs:
  lint:
    timeout-minutes: 45
    runs-on: "ubuntu-22.04"
    defaults:
      run:
        shell: bash
        working-directory: python
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        lfs: true
    - uses: Swatinem/rust-cache@v2
      with:
        workspaces: python
    - name: Install linting tools
      run: |
        pip install black isort ruff maturin
    - name: Lint Python
      run: |
        black --check python
        isort --check-only python
        ruff check python
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y protobuf-compiler libssl-dev
    - name: Lint Rust
      run: |
        cargo fmt --all -- --check
        cargo clippy --all-features --tests
    - name: Build
      run: |
        python -m venv venv
        source venv/bin/activate
        maturin develop --extras tests
    - name: Run doctest
      run: |
        source venv/bin/activate
        pytest --doctest-modules python/lance
    
  linux:
    timeout-minutes: 45
    strategy:
      matrix:
        python-minor-version: [ "8", "9", "10", "11" ]
    runs-on: "ubuntu-22.04"
    defaults:
      run:
        shell: bash
        working-directory: python
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        lfs: true
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.${{ matrix.python-minor-version }}
    - uses: Swatinem/rust-cache@v2
      with:
        workspaces: python
    - uses: ./.github/workflows/build_linux_wheel
    - uses: ./.github/workflows/run_tests
  mac:
    timeout-minutes: 45
    runs-on: "macos-12"
    defaults:
      run:
        shell: bash
        working-directory: python
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        lfs: true
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - uses: Swatinem/rust-cache@v2
      with:
        workspaces: python
    - uses: ./.github/workflows/build_mac_wheel
    - uses: ./.github/workflows/run_tests
  windows:
    runs-on: windows-latest
    timeout-minutes: 90
    defaults:
      run:
        shell: powershell
        working-directory: python
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: python
      - uses: ./.github/workflows/build_windows_wheel
        with:
          vcpkg_token: ${{ secrets.VCPKG_GITHUB_PACKAGES }}
      - uses: ./.github/workflows/run_tests